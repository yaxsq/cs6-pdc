import matplotlib.pyplot as plt

import matplotlib.pyplot as plt

data = {
    1:  [(50000, 0.000657), (100000, 0.000922), (150000, 0.001138), (200000, 0.001802),
         (250000, 0.001839), (300000, 0.002741), (350000, 0.003517), (400000, 0.002972)],

    5:  [(50000, 0.000035), (100000, 0.000064), (150000, 0.000051), (200000, 0.000076),
         (250000, 0.001116), (300000, 0.000230), (350000, 0.001761), (400000, 0.001097)],

    10: [(50000, 0.000241), (100000, 0.000464), (150000, 0.000403), (200000, 0.000477),
         (250000, 0.000147), (300000, 0.000465), (350000, 0.000627), (400000, 0.002610)],

    15: [(50000, 0.000393), (100000, 0.000281), (150000, 0.000327), (200000, 0.000471),
         (250000, 0.000615), (300000, 0.000591), (350000, 0.000821), (400000, 0.001478)],

    20: [(50000, 0.000364), (100000, 0.000209), (150000, 0.000432), (200000, 0.000329),
         (250000, 0.000429), (300000, 0.000548), (350000, 0.000775), (400000, 0.000904)],

    25: [(50000, 0.000265), (100000, 0.000328), (150000, 0.000327), (200000, 0.000400),
         (250000, 0.000253), (300000, 0.000385), (350000, 0.000367), (400000, 0.000748)],

    30: [(50000, 0.000269), (100000, 0.000761), (150000, 0.000451), (200000, 0.000276),
         (250000, 0.000616), (300000, 0.000331), (350000, 0.000346), (400000, 0.000503)]
}


# Plot each thread count as a separate line
plt.figure(figsize=(10, 6))
for threads, values in data.items():
    x_vals = [point[0] for point in values]  # Array sizes
    y_vals = [point[1] for point in values]  # Execution times
    plt.plot(x_vals, y_vals, marker='o', label=f'Threads: {threads}')

# Labels and title
plt.xlabel("Array Size")
plt.ylabel("Execution Time (seconds)")
plt.title("Execution Time vs Array Size for Different Threads")
plt.legend()  # Show legend
plt.grid(True)

# Show the plot
# plt.show()

plt.savefig("exec_time_plot.png")  # Saves as an image